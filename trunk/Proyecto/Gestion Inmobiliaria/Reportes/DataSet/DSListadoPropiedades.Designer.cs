//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GI.Reportes.DataSet {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DSListadoPropiedades")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSListadoPropiedades : System.Data.DataSet {
        
        private PropiedadesDataTable tablePropiedades;
        
        private ParametrosDataTable tableParametros;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSListadoPropiedades() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSListadoPropiedades(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Propiedades"] != null)) {
                    base.Tables.Add(new PropiedadesDataTable(ds.Tables["Propiedades"]));
                }
                if ((ds.Tables["Parametros"] != null)) {
                    base.Tables.Add(new ParametrosDataTable(ds.Tables["Parametros"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PropiedadesDataTable Propiedades {
            get {
                return this.tablePropiedades;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ParametrosDataTable Parametros {
            get {
                return this.tableParametros;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DSListadoPropiedades cln = ((DSListadoPropiedades)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Propiedades"] != null)) {
                    base.Tables.Add(new PropiedadesDataTable(ds.Tables["Propiedades"]));
                }
                if ((ds.Tables["Parametros"] != null)) {
                    base.Tables.Add(new ParametrosDataTable(ds.Tables["Parametros"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePropiedades = ((PropiedadesDataTable)(base.Tables["Propiedades"]));
            if ((initTable == true)) {
                if ((this.tablePropiedades != null)) {
                    this.tablePropiedades.InitVars();
                }
            }
            this.tableParametros = ((ParametrosDataTable)(base.Tables["Parametros"]));
            if ((initTable == true)) {
                if ((this.tableParametros != null)) {
                    this.tableParametros.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSListadoPropiedades";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSListadoPropiedades.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePropiedades = new PropiedadesDataTable();
            base.Tables.Add(this.tablePropiedades);
            this.tableParametros = new ParametrosDataTable();
            base.Tables.Add(this.tableParametros);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePropiedades() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeParametros() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DSListadoPropiedades ds = new DSListadoPropiedades();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void PropiedadesRowChangeEventHandler(object sender, PropiedadesRowChangeEvent e);
        
        public delegate void ParametrosRowChangeEventHandler(object sender, ParametrosRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PropiedadesDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnIdPropiedad;
            
            private System.Data.DataColumn columnCodigo;
            
            private System.Data.DataColumn columnTipoPropiedad;
            
            private System.Data.DataColumn columnEstadoPropiedad;
            
            private System.Data.DataColumn columnAmbientes;
            
            private System.Data.DataColumn columnValor;
            
            private System.Data.DataColumn columnPartido;
            
            private System.Data.DataColumn columnBarrio;
            
            private System.Data.DataColumn columnDireccion;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PropiedadesDataTable() {
                this.TableName = "Propiedades";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PropiedadesDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PropiedadesDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IdPropiedadColumn {
                get {
                    return this.columnIdPropiedad;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TipoPropiedadColumn {
                get {
                    return this.columnTipoPropiedad;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EstadoPropiedadColumn {
                get {
                    return this.columnEstadoPropiedad;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmbientesColumn {
                get {
                    return this.columnAmbientes;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PartidoColumn {
                get {
                    return this.columnPartido;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BarrioColumn {
                get {
                    return this.columnBarrio;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DireccionColumn {
                get {
                    return this.columnDireccion;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PropiedadesRow this[int index] {
                get {
                    return ((PropiedadesRow)(this.Rows[index]));
                }
            }
            
            public event PropiedadesRowChangeEventHandler PropiedadesRowChanging;
            
            public event PropiedadesRowChangeEventHandler PropiedadesRowChanged;
            
            public event PropiedadesRowChangeEventHandler PropiedadesRowDeleting;
            
            public event PropiedadesRowChangeEventHandler PropiedadesRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPropiedadesRow(PropiedadesRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PropiedadesRow AddPropiedadesRow(int IdPropiedad, string Codigo, string TipoPropiedad, string EstadoPropiedad, string Ambientes, string Valor, string Partido, string Barrio, string Direccion) {
                PropiedadesRow rowPropiedadesRow = ((PropiedadesRow)(this.NewRow()));
                rowPropiedadesRow.ItemArray = new object[] {
                        IdPropiedad,
                        Codigo,
                        TipoPropiedad,
                        EstadoPropiedad,
                        Ambientes,
                        Valor,
                        Partido,
                        Barrio,
                        Direccion};
                this.Rows.Add(rowPropiedadesRow);
                return rowPropiedadesRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PropiedadesRow FindByIdPropiedad(int IdPropiedad) {
                return ((PropiedadesRow)(this.Rows.Find(new object[] {
                            IdPropiedad})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PropiedadesDataTable cln = ((PropiedadesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PropiedadesDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIdPropiedad = base.Columns["IdPropiedad"];
                this.columnCodigo = base.Columns["Codigo"];
                this.columnTipoPropiedad = base.Columns["TipoPropiedad"];
                this.columnEstadoPropiedad = base.Columns["EstadoPropiedad"];
                this.columnAmbientes = base.Columns["Ambientes"];
                this.columnValor = base.Columns["Valor"];
                this.columnPartido = base.Columns["Partido"];
                this.columnBarrio = base.Columns["Barrio"];
                this.columnDireccion = base.Columns["Direccion"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIdPropiedad = new System.Data.DataColumn("IdPropiedad", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdPropiedad);
                this.columnCodigo = new System.Data.DataColumn("Codigo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.columnTipoPropiedad = new System.Data.DataColumn("TipoPropiedad", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoPropiedad);
                this.columnEstadoPropiedad = new System.Data.DataColumn("EstadoPropiedad", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstadoPropiedad);
                this.columnAmbientes = new System.Data.DataColumn("Ambientes", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmbientes);
                this.columnValor = new System.Data.DataColumn("Valor", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnValor);
                this.columnPartido = new System.Data.DataColumn("Partido", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartido);
                this.columnBarrio = new System.Data.DataColumn("Barrio", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarrio);
                this.columnDireccion = new System.Data.DataColumn("Direccion", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnIdPropiedad}, true));
                this.columnIdPropiedad.AllowDBNull = false;
                this.columnIdPropiedad.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PropiedadesRow NewPropiedadesRow() {
                return ((PropiedadesRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PropiedadesRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PropiedadesRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PropiedadesRowChanged != null)) {
                    this.PropiedadesRowChanged(this, new PropiedadesRowChangeEvent(((PropiedadesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PropiedadesRowChanging != null)) {
                    this.PropiedadesRowChanging(this, new PropiedadesRowChangeEvent(((PropiedadesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PropiedadesRowDeleted != null)) {
                    this.PropiedadesRowDeleted(this, new PropiedadesRowChangeEvent(((PropiedadesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PropiedadesRowDeleting != null)) {
                    this.PropiedadesRowDeleting(this, new PropiedadesRowChangeEvent(((PropiedadesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePropiedadesRow(PropiedadesRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DSListadoPropiedades ds = new DSListadoPropiedades();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PropiedadesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ParametrosDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTipoListado;
            
            private System.Data.DataColumn columnFecha;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametrosDataTable() {
                this.TableName = "Parametros";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ParametrosDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ParametrosDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TipoListadoColumn {
                get {
                    return this.columnTipoListado;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametrosRow this[int index] {
                get {
                    return ((ParametrosRow)(this.Rows[index]));
                }
            }
            
            public event ParametrosRowChangeEventHandler ParametrosRowChanging;
            
            public event ParametrosRowChangeEventHandler ParametrosRowChanged;
            
            public event ParametrosRowChangeEventHandler ParametrosRowDeleting;
            
            public event ParametrosRowChangeEventHandler ParametrosRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddParametrosRow(ParametrosRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametrosRow AddParametrosRow(string TipoListado, string Fecha) {
                ParametrosRow rowParametrosRow = ((ParametrosRow)(this.NewRow()));
                rowParametrosRow.ItemArray = new object[] {
                        TipoListado,
                        Fecha};
                this.Rows.Add(rowParametrosRow);
                return rowParametrosRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ParametrosDataTable cln = ((ParametrosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ParametrosDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTipoListado = base.Columns["TipoListado"];
                this.columnFecha = base.Columns["Fecha"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTipoListado = new System.Data.DataColumn("TipoListado", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoListado);
                this.columnFecha = new System.Data.DataColumn("Fecha", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametrosRow NewParametrosRow() {
                return ((ParametrosRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ParametrosRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ParametrosRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ParametrosRowChanged != null)) {
                    this.ParametrosRowChanged(this, new ParametrosRowChangeEvent(((ParametrosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ParametrosRowChanging != null)) {
                    this.ParametrosRowChanging(this, new ParametrosRowChangeEvent(((ParametrosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ParametrosRowDeleted != null)) {
                    this.ParametrosRowDeleted(this, new ParametrosRowChangeEvent(((ParametrosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ParametrosRowDeleting != null)) {
                    this.ParametrosRowDeleting(this, new ParametrosRowChangeEvent(((ParametrosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveParametrosRow(ParametrosRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DSListadoPropiedades ds = new DSListadoPropiedades();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ParametrosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PropiedadesRow : System.Data.DataRow {
            
            private PropiedadesDataTable tablePropiedades;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PropiedadesRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePropiedades = ((PropiedadesDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IdPropiedad {
                get {
                    return ((int)(this[this.tablePropiedades.IdPropiedadColumn]));
                }
                set {
                    this[this.tablePropiedades.IdPropiedadColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Codigo {
                get {
                    try {
                        return ((string)(this[this.tablePropiedades.CodigoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Codigo\' in table \'Propiedades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePropiedades.CodigoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipoPropiedad {
                get {
                    try {
                        return ((string)(this[this.tablePropiedades.TipoPropiedadColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TipoPropiedad\' in table \'Propiedades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePropiedades.TipoPropiedadColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EstadoPropiedad {
                get {
                    try {
                        return ((string)(this[this.tablePropiedades.EstadoPropiedadColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EstadoPropiedad\' in table \'Propiedades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePropiedades.EstadoPropiedadColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ambientes {
                get {
                    try {
                        return ((string)(this[this.tablePropiedades.AmbientesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Ambientes\' in table \'Propiedades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePropiedades.AmbientesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Valor {
                get {
                    try {
                        return ((string)(this[this.tablePropiedades.ValorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Valor\' in table \'Propiedades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePropiedades.ValorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Partido {
                get {
                    try {
                        return ((string)(this[this.tablePropiedades.PartidoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Partido\' in table \'Propiedades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePropiedades.PartidoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Barrio {
                get {
                    try {
                        return ((string)(this[this.tablePropiedades.BarrioColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Barrio\' in table \'Propiedades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePropiedades.BarrioColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion {
                get {
                    try {
                        return ((string)(this[this.tablePropiedades.DireccionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Direccion\' in table \'Propiedades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePropiedades.DireccionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoNull() {
                return this.IsNull(this.tablePropiedades.CodigoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoNull() {
                this[this.tablePropiedades.CodigoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoPropiedadNull() {
                return this.IsNull(this.tablePropiedades.TipoPropiedadColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoPropiedadNull() {
                this[this.tablePropiedades.TipoPropiedadColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstadoPropiedadNull() {
                return this.IsNull(this.tablePropiedades.EstadoPropiedadColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstadoPropiedadNull() {
                this[this.tablePropiedades.EstadoPropiedadColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmbientesNull() {
                return this.IsNull(this.tablePropiedades.AmbientesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmbientesNull() {
                this[this.tablePropiedades.AmbientesColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValorNull() {
                return this.IsNull(this.tablePropiedades.ValorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValorNull() {
                this[this.tablePropiedades.ValorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartidoNull() {
                return this.IsNull(this.tablePropiedades.PartidoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartidoNull() {
                this[this.tablePropiedades.PartidoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarrioNull() {
                return this.IsNull(this.tablePropiedades.BarrioColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarrioNull() {
                this[this.tablePropiedades.BarrioColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccionNull() {
                return this.IsNull(this.tablePropiedades.DireccionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccionNull() {
                this[this.tablePropiedades.DireccionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ParametrosRow : System.Data.DataRow {
            
            private ParametrosDataTable tableParametros;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ParametrosRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableParametros = ((ParametrosDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipoListado {
                get {
                    try {
                        return ((string)(this[this.tableParametros.TipoListadoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TipoListado\' in table \'Parametros\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParametros.TipoListadoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fecha {
                get {
                    try {
                        return ((string)(this[this.tableParametros.FechaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Fecha\' in table \'Parametros\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParametros.FechaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoListadoNull() {
                return this.IsNull(this.tableParametros.TipoListadoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoListadoNull() {
                this[this.tableParametros.TipoListadoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.tableParametros.FechaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.tableParametros.FechaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PropiedadesRowChangeEvent : System.EventArgs {
            
            private PropiedadesRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PropiedadesRowChangeEvent(PropiedadesRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PropiedadesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ParametrosRowChangeEvent : System.EventArgs {
            
            private ParametrosRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametrosRowChangeEvent(ParametrosRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametrosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591